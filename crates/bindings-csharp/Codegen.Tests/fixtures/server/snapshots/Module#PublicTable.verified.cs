//HintName: PublicTable.cs
// <auto-generated />
#nullable enable

partial struct PublicTable : System.IEquatable<PublicTable>, SpacetimeDB.BSATN.IStructuralReadWrite
{
    public void ReadFields(System.IO.BinaryReader reader)
    {
        Id = BSATN.IdRW.Read(reader);
        ByteField = BSATN.ByteFieldRW.Read(reader);
        UshortField = BSATN.UshortFieldRW.Read(reader);
        UintField = BSATN.UintFieldRW.Read(reader);
        UlongField = BSATN.UlongFieldRW.Read(reader);
        UInt128Field = BSATN.UInt128FieldRW.Read(reader);
        U128Field = BSATN.U128FieldRW.Read(reader);
        U256Field = BSATN.U256FieldRW.Read(reader);
        SbyteField = BSATN.SbyteFieldRW.Read(reader);
        ShortField = BSATN.ShortFieldRW.Read(reader);
        IntField = BSATN.IntFieldRW.Read(reader);
        LongField = BSATN.LongFieldRW.Read(reader);
        Int128Field = BSATN.Int128FieldRW.Read(reader);
        I128Field = BSATN.I128FieldRW.Read(reader);
        I256Field = BSATN.I256FieldRW.Read(reader);
        BoolField = BSATN.BoolFieldRW.Read(reader);
        FloatField = BSATN.FloatFieldRW.Read(reader);
        DoubleField = BSATN.DoubleFieldRW.Read(reader);
        StringField = BSATN.StringFieldRW.Read(reader);
        IdentityField = BSATN.IdentityFieldRW.Read(reader);
        ConnectionIdField = BSATN.ConnectionIdFieldRW.Read(reader);
        CustomStructField = BSATN.CustomStructFieldRW.Read(reader);
        CustomClassField = BSATN.CustomClassFieldRW.Read(reader);
        CustomEnumField = BSATN.CustomEnumFieldRW.Read(reader);
        CustomTaggedEnumField = BSATN.CustomTaggedEnumFieldRW.Read(reader);
        ListField = BSATN.ListFieldRW.Read(reader);
        NullableValueField = BSATN.NullableValueFieldRW.Read(reader);
        NullableReferenceField = BSATN.NullableReferenceFieldRW.Read(reader);
    }

    public void WriteFields(System.IO.BinaryWriter writer)
    {
        BSATN.IdRW.Write(writer, Id);
        BSATN.ByteFieldRW.Write(writer, ByteField);
        BSATN.UshortFieldRW.Write(writer, UshortField);
        BSATN.UintFieldRW.Write(writer, UintField);
        BSATN.UlongFieldRW.Write(writer, UlongField);
        BSATN.UInt128FieldRW.Write(writer, UInt128Field);
        BSATN.U128FieldRW.Write(writer, U128Field);
        BSATN.U256FieldRW.Write(writer, U256Field);
        BSATN.SbyteFieldRW.Write(writer, SbyteField);
        BSATN.ShortFieldRW.Write(writer, ShortField);
        BSATN.IntFieldRW.Write(writer, IntField);
        BSATN.LongFieldRW.Write(writer, LongField);
        BSATN.Int128FieldRW.Write(writer, Int128Field);
        BSATN.I128FieldRW.Write(writer, I128Field);
        BSATN.I256FieldRW.Write(writer, I256Field);
        BSATN.BoolFieldRW.Write(writer, BoolField);
        BSATN.FloatFieldRW.Write(writer, FloatField);
        BSATN.DoubleFieldRW.Write(writer, DoubleField);
        BSATN.StringFieldRW.Write(writer, StringField);
        BSATN.IdentityFieldRW.Write(writer, IdentityField);
        BSATN.ConnectionIdFieldRW.Write(writer, ConnectionIdField);
        BSATN.CustomStructFieldRW.Write(writer, CustomStructField);
        BSATN.CustomClassFieldRW.Write(writer, CustomClassField);
        BSATN.CustomEnumFieldRW.Write(writer, CustomEnumField);
        BSATN.CustomTaggedEnumFieldRW.Write(writer, CustomTaggedEnumField);
        BSATN.ListFieldRW.Write(writer, ListField);
        BSATN.NullableValueFieldRW.Write(writer, NullableValueField);
        BSATN.NullableReferenceFieldRW.Write(writer, NullableReferenceField);
    }

    public override string ToString() =>
        $"PublicTable {{ Id = {SpacetimeDB.BSATN.StringUtil.GenericToString(Id)}, ByteField = {SpacetimeDB.BSATN.StringUtil.GenericToString(ByteField)}, UshortField = {SpacetimeDB.BSATN.StringUtil.GenericToString(UshortField)}, UintField = {SpacetimeDB.BSATN.StringUtil.GenericToString(UintField)}, UlongField = {SpacetimeDB.BSATN.StringUtil.GenericToString(UlongField)}, UInt128Field = {SpacetimeDB.BSATN.StringUtil.GenericToString(UInt128Field)}, U128Field = {SpacetimeDB.BSATN.StringUtil.GenericToString(U128Field)}, U256Field = {SpacetimeDB.BSATN.StringUtil.GenericToString(U256Field)}, SbyteField = {SpacetimeDB.BSATN.StringUtil.GenericToString(SbyteField)}, ShortField = {SpacetimeDB.BSATN.StringUtil.GenericToString(ShortField)}, IntField = {SpacetimeDB.BSATN.StringUtil.GenericToString(IntField)}, LongField = {SpacetimeDB.BSATN.StringUtil.GenericToString(LongField)}, Int128Field = {SpacetimeDB.BSATN.StringUtil.GenericToString(Int128Field)}, I128Field = {SpacetimeDB.BSATN.StringUtil.GenericToString(I128Field)}, I256Field = {SpacetimeDB.BSATN.StringUtil.GenericToString(I256Field)}, BoolField = {SpacetimeDB.BSATN.StringUtil.GenericToString(BoolField)}, FloatField = {SpacetimeDB.BSATN.StringUtil.GenericToString(FloatField)}, DoubleField = {SpacetimeDB.BSATN.StringUtil.GenericToString(DoubleField)}, StringField = {SpacetimeDB.BSATN.StringUtil.GenericToString(StringField)}, IdentityField = {SpacetimeDB.BSATN.StringUtil.GenericToString(IdentityField)}, ConnectionIdField = {SpacetimeDB.BSATN.StringUtil.GenericToString(ConnectionIdField)}, CustomStructField = {SpacetimeDB.BSATN.StringUtil.GenericToString(CustomStructField)}, CustomClassField = {SpacetimeDB.BSATN.StringUtil.GenericToString(CustomClassField)}, CustomEnumField = {SpacetimeDB.BSATN.StringUtil.GenericToString(CustomEnumField)}, CustomTaggedEnumField = {SpacetimeDB.BSATN.StringUtil.GenericToString(CustomTaggedEnumField)}, ListField = {SpacetimeDB.BSATN.StringUtil.GenericToString(ListField)}, NullableValueField = {SpacetimeDB.BSATN.StringUtil.GenericToString(NullableValueField)}, NullableReferenceField = {SpacetimeDB.BSATN.StringUtil.GenericToString(NullableReferenceField)} }}";

    public readonly partial struct BSATN : SpacetimeDB.BSATN.IReadWrite<PublicTable>
    {
        internal static readonly SpacetimeDB.BSATN.I32 IdRW = new();
        internal static readonly SpacetimeDB.BSATN.U8 ByteFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.U16 UshortFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.U32 UintFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.U64 UlongFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.U128 UInt128FieldRW = new();
        internal static readonly SpacetimeDB.BSATN.U128Stdb U128FieldRW = new();
        internal static readonly SpacetimeDB.BSATN.U256 U256FieldRW = new();
        internal static readonly SpacetimeDB.BSATN.I8 SbyteFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.I16 ShortFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.I32 IntFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.I64 LongFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.I128 Int128FieldRW = new();
        internal static readonly SpacetimeDB.BSATN.I128Stdb I128FieldRW = new();
        internal static readonly SpacetimeDB.BSATN.I256 I256FieldRW = new();
        internal static readonly SpacetimeDB.BSATN.Bool BoolFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.F32 FloatFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.F64 DoubleFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.String StringFieldRW = new();
        internal static readonly SpacetimeDB.Identity.BSATN IdentityFieldRW = new();
        internal static readonly SpacetimeDB.ConnectionId.BSATN ConnectionIdFieldRW = new();
        internal static readonly CustomStruct.BSATN CustomStructFieldRW = new();
        internal static readonly CustomClass.BSATN CustomClassFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.Enum<CustomEnum> CustomEnumFieldRW = new();
        internal static readonly CustomTaggedEnum.BSATN CustomTaggedEnumFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.List<int, SpacetimeDB.BSATN.I32> ListFieldRW =
            new();
        internal static readonly SpacetimeDB.BSATN.ValueOption<
            int,
            SpacetimeDB.BSATN.I32
        > NullableValueFieldRW = new();
        internal static readonly SpacetimeDB.BSATN.RefOption<
            string,
            SpacetimeDB.BSATN.String
        > NullableReferenceFieldRW = new();

        public PublicTable Read(System.IO.BinaryReader reader) =>
            SpacetimeDB.BSATN.IStructuralReadWrite.Read<PublicTable>(reader);

        public void Write(System.IO.BinaryWriter writer, PublicTable value)
        {
            value.WriteFields(writer);
        }

        public SpacetimeDB.BSATN.AlgebraicType.Ref GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) =>
            registrar.RegisterType<PublicTable>(_ => new SpacetimeDB.BSATN.AlgebraicType.Product(
                new SpacetimeDB.BSATN.AggregateElement[]
                {
                    new("Id", IdRW.GetAlgebraicType(registrar)),
                    new("ByteField", ByteFieldRW.GetAlgebraicType(registrar)),
                    new("UshortField", UshortFieldRW.GetAlgebraicType(registrar)),
                    new("UintField", UintFieldRW.GetAlgebraicType(registrar)),
                    new("UlongField", UlongFieldRW.GetAlgebraicType(registrar)),
                    new("UInt128Field", UInt128FieldRW.GetAlgebraicType(registrar)),
                    new("U128Field", U128FieldRW.GetAlgebraicType(registrar)),
                    new("U256Field", U256FieldRW.GetAlgebraicType(registrar)),
                    new("SbyteField", SbyteFieldRW.GetAlgebraicType(registrar)),
                    new("ShortField", ShortFieldRW.GetAlgebraicType(registrar)),
                    new("IntField", IntFieldRW.GetAlgebraicType(registrar)),
                    new("LongField", LongFieldRW.GetAlgebraicType(registrar)),
                    new("Int128Field", Int128FieldRW.GetAlgebraicType(registrar)),
                    new("I128Field", I128FieldRW.GetAlgebraicType(registrar)),
                    new("I256Field", I256FieldRW.GetAlgebraicType(registrar)),
                    new("BoolField", BoolFieldRW.GetAlgebraicType(registrar)),
                    new("FloatField", FloatFieldRW.GetAlgebraicType(registrar)),
                    new("DoubleField", DoubleFieldRW.GetAlgebraicType(registrar)),
                    new("StringField", StringFieldRW.GetAlgebraicType(registrar)),
                    new("IdentityField", IdentityFieldRW.GetAlgebraicType(registrar)),
                    new("ConnectionIdField", ConnectionIdFieldRW.GetAlgebraicType(registrar)),
                    new("CustomStructField", CustomStructFieldRW.GetAlgebraicType(registrar)),
                    new("CustomClassField", CustomClassFieldRW.GetAlgebraicType(registrar)),
                    new("CustomEnumField", CustomEnumFieldRW.GetAlgebraicType(registrar)),
                    new(
                        "CustomTaggedEnumField",
                        CustomTaggedEnumFieldRW.GetAlgebraicType(registrar)
                    ),
                    new("ListField", ListFieldRW.GetAlgebraicType(registrar)),
                    new("NullableValueField", NullableValueFieldRW.GetAlgebraicType(registrar)),
                    new(
                        "NullableReferenceField",
                        NullableReferenceFieldRW.GetAlgebraicType(registrar)
                    )
                }
            ));

        SpacetimeDB.BSATN.AlgebraicType SpacetimeDB.BSATN.IReadWrite<PublicTable>.GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) => GetAlgebraicType(registrar);
    }

    public override int GetHashCode()
    {
        return Id.GetHashCode()
            ^ ByteField.GetHashCode()
            ^ UshortField.GetHashCode()
            ^ UintField.GetHashCode()
            ^ UlongField.GetHashCode()
            ^ UInt128Field.GetHashCode()
            ^ U128Field.GetHashCode()
            ^ U256Field.GetHashCode()
            ^ SbyteField.GetHashCode()
            ^ ShortField.GetHashCode()
            ^ IntField.GetHashCode()
            ^ LongField.GetHashCode()
            ^ Int128Field.GetHashCode()
            ^ I128Field.GetHashCode()
            ^ I256Field.GetHashCode()
            ^ BoolField.GetHashCode()
            ^ FloatField.GetHashCode()
            ^ DoubleField.GetHashCode()
            ^ StringField.GetHashCode()
            ^ IdentityField.GetHashCode()
            ^ ConnectionIdField.GetHashCode()
            ^ CustomStructField.GetHashCode()
            ^ CustomClassField.GetHashCode()
            ^ CustomEnumField.GetHashCode()
            ^ CustomTaggedEnumField.GetHashCode()
            ^ ListField.GetHashCode()
            ^ NullableValueField.GetHashCode()
            ^ (NullableReferenceField == null ? 0 : NullableReferenceField.GetHashCode());
    }

#nullable enable
    public bool Equals(PublicTable that)
    {
        return Id.Equals(that.Id)
            && ByteField.Equals(that.ByteField)
            && UshortField.Equals(that.UshortField)
            && UintField.Equals(that.UintField)
            && UlongField.Equals(that.UlongField)
            && UInt128Field.Equals(that.UInt128Field)
            && U128Field.Equals(that.U128Field)
            && U256Field.Equals(that.U256Field)
            && SbyteField.Equals(that.SbyteField)
            && ShortField.Equals(that.ShortField)
            && IntField.Equals(that.IntField)
            && LongField.Equals(that.LongField)
            && Int128Field.Equals(that.Int128Field)
            && I128Field.Equals(that.I128Field)
            && I256Field.Equals(that.I256Field)
            && BoolField.Equals(that.BoolField)
            && FloatField.Equals(that.FloatField)
            && DoubleField.Equals(that.DoubleField)
            && StringField.Equals(that.StringField)
            && IdentityField.Equals(that.IdentityField)
            && ConnectionIdField.Equals(that.ConnectionIdField)
            && CustomStructField.Equals(that.CustomStructField)
            && CustomClassField.Equals(that.CustomClassField)
            && CustomEnumField.Equals(that.CustomEnumField)
            && CustomTaggedEnumField.Equals(that.CustomTaggedEnumField)
            && ListField.Equals(that.ListField)
            && NullableValueField.Equals(that.NullableValueField)
            && (
                NullableReferenceField == null
                    ? that.NullableReferenceField == null
                    : NullableReferenceField.Equals(that.NullableReferenceField)
            );
    }

    public override bool Equals(object? that)
    {
        if (that == null)
        {
            return false;
        }
        var that_ = that as PublicTable?;
        if (((object?)that_) == null)
        {
            return false;
        }
        return Equals(that_);
    }

    public static bool operator ==(PublicTable this_, PublicTable that)
    {
        if (((object?)this_) == null || ((object?)that) == null)
        {
            return object.Equals(this_, that);
        }
        return this_.Equals(that);
    }

    public static bool operator !=(PublicTable this_, PublicTable that)
    {
        if (((object?)this_) == null || ((object?)that) == null)
        {
            return !object.Equals(this_, that);
        }
        return !this_.Equals(that);
    }
#nullable restore
} // PublicTable
