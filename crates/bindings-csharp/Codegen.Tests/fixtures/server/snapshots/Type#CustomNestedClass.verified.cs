//HintName: CustomNestedClass.cs
// <auto-generated />
#nullable enable

partial class CustomNestedClass
    : System.IEquatable<CustomNestedClass>,
        SpacetimeDB.BSATN.IStructuralReadWrite
{
    public void ReadFields(System.IO.BinaryReader reader)
    {
        NestedClass = BSATN.NestedClassRW.Read(reader);
        NestedNullableClass = BSATN.NestedNullableClassRW.Read(reader);
        NestedEnum = BSATN.NestedEnumRW.Read(reader);
        NestedNullableEnum = BSATN.NestedNullableEnumRW.Read(reader);
        NestedTaggedEnum = BSATN.NestedTaggedEnumRW.Read(reader);
        NestedNullableTaggedEnum = BSATN.NestedNullableTaggedEnumRW.Read(reader);
        NestedCustomRecord = BSATN.NestedCustomRecordRW.Read(reader);
        NestedNullableCustomRecord = BSATN.NestedNullableCustomRecordRW.Read(reader);
    }

    public void WriteFields(System.IO.BinaryWriter writer)
    {
        BSATN.NestedClassRW.Write(writer, NestedClass);
        BSATN.NestedNullableClassRW.Write(writer, NestedNullableClass);
        BSATN.NestedEnumRW.Write(writer, NestedEnum);
        BSATN.NestedNullableEnumRW.Write(writer, NestedNullableEnum);
        BSATN.NestedTaggedEnumRW.Write(writer, NestedTaggedEnum);
        BSATN.NestedNullableTaggedEnumRW.Write(writer, NestedNullableTaggedEnum);
        BSATN.NestedCustomRecordRW.Write(writer, NestedCustomRecord);
        BSATN.NestedNullableCustomRecordRW.Write(writer, NestedNullableCustomRecord);
    }

    public override string ToString() =>
        $"CustomNestedClass {{ NestedClass = {SpacetimeDB.BSATN.StringUtil.GenericToString(NestedClass)}, NestedNullableClass = {SpacetimeDB.BSATN.StringUtil.GenericToString(NestedNullableClass)}, NestedEnum = {SpacetimeDB.BSATN.StringUtil.GenericToString(NestedEnum)}, NestedNullableEnum = {SpacetimeDB.BSATN.StringUtil.GenericToString(NestedNullableEnum)}, NestedTaggedEnum = {SpacetimeDB.BSATN.StringUtil.GenericToString(NestedTaggedEnum)}, NestedNullableTaggedEnum = {SpacetimeDB.BSATN.StringUtil.GenericToString(NestedNullableTaggedEnum)}, NestedCustomRecord = {SpacetimeDB.BSATN.StringUtil.GenericToString(NestedCustomRecord)}, NestedNullableCustomRecord = {SpacetimeDB.BSATN.StringUtil.GenericToString(NestedNullableCustomRecord)} }}";

    public readonly partial struct BSATN : SpacetimeDB.BSATN.IReadWrite<CustomNestedClass>
    {
        internal static readonly CustomClass.BSATN NestedClassRW = new();
        internal static readonly SpacetimeDB.BSATN.RefOption<
            CustomClass,
            CustomClass.BSATN
        > NestedNullableClassRW = new();
        internal static readonly SpacetimeDB.BSATN.Enum<CustomEnum> NestedEnumRW = new();
        internal static readonly SpacetimeDB.BSATN.ValueOption<
            CustomEnum,
            SpacetimeDB.BSATN.Enum<CustomEnum>
        > NestedNullableEnumRW = new();
        internal static readonly CustomTaggedEnum.BSATN NestedTaggedEnumRW = new();
        internal static readonly SpacetimeDB.BSATN.RefOption<
            CustomTaggedEnum,
            CustomTaggedEnum.BSATN
        > NestedNullableTaggedEnumRW = new();
        internal static readonly CustomRecord.BSATN NestedCustomRecordRW = new();
        internal static readonly SpacetimeDB.BSATN.RefOption<
            CustomRecord,
            CustomRecord.BSATN
        > NestedNullableCustomRecordRW = new();

        public CustomNestedClass Read(System.IO.BinaryReader reader) =>
            SpacetimeDB.BSATN.IStructuralReadWrite.Read<CustomNestedClass>(reader);

        public void Write(System.IO.BinaryWriter writer, CustomNestedClass value)
        {
            value.WriteFields(writer);
        }

        public SpacetimeDB.BSATN.AlgebraicType.Ref GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) =>
            registrar.RegisterType<CustomNestedClass>(
                _ => new SpacetimeDB.BSATN.AlgebraicType.Product(
                    new SpacetimeDB.BSATN.AggregateElement[]
                    {
                        new("NestedClass", NestedClassRW.GetAlgebraicType(registrar)),
                        new(
                            "NestedNullableClass",
                            NestedNullableClassRW.GetAlgebraicType(registrar)
                        ),
                        new("NestedEnum", NestedEnumRW.GetAlgebraicType(registrar)),
                        new("NestedNullableEnum", NestedNullableEnumRW.GetAlgebraicType(registrar)),
                        new("NestedTaggedEnum", NestedTaggedEnumRW.GetAlgebraicType(registrar)),
                        new(
                            "NestedNullableTaggedEnum",
                            NestedNullableTaggedEnumRW.GetAlgebraicType(registrar)
                        ),
                        new("NestedCustomRecord", NestedCustomRecordRW.GetAlgebraicType(registrar)),
                        new(
                            "NestedNullableCustomRecord",
                            NestedNullableCustomRecordRW.GetAlgebraicType(registrar)
                        )
                    }
                )
            );

        SpacetimeDB.BSATN.AlgebraicType SpacetimeDB.BSATN.IReadWrite<CustomNestedClass>.GetAlgebraicType(
            SpacetimeDB.BSATN.ITypeRegistrar registrar
        ) => GetAlgebraicType(registrar);
    }

    public override int GetHashCode()
    {
        return NestedClass.GetHashCode()
            ^ (NestedNullableClass == null ? 0 : NestedNullableClass.GetHashCode())
            ^ NestedEnum.GetHashCode()
            ^ NestedNullableEnum.GetHashCode()
            ^ NestedTaggedEnum.GetHashCode()
            ^ (NestedNullableTaggedEnum == null ? 0 : NestedNullableTaggedEnum.GetHashCode())
            ^ NestedCustomRecord.GetHashCode()
            ^ (NestedNullableCustomRecord == null ? 0 : NestedNullableCustomRecord.GetHashCode());
    }

#nullable enable
    public bool Equals(CustomNestedClass? that)
    {
        if (((object?)that) == null)
        {
            return false;
        }
        return NestedClass.Equals(that.NestedClass)
            && (
                NestedNullableClass == null
                    ? that.NestedNullableClass == null
                    : NestedNullableClass.Equals(that.NestedNullableClass)
            )
            && NestedEnum.Equals(that.NestedEnum)
            && NestedNullableEnum.Equals(that.NestedNullableEnum)
            && NestedTaggedEnum.Equals(that.NestedTaggedEnum)
            && (
                NestedNullableTaggedEnum == null
                    ? that.NestedNullableTaggedEnum == null
                    : NestedNullableTaggedEnum.Equals(that.NestedNullableTaggedEnum)
            )
            && NestedCustomRecord.Equals(that.NestedCustomRecord)
            && (
                NestedNullableCustomRecord == null
                    ? that.NestedNullableCustomRecord == null
                    : NestedNullableCustomRecord.Equals(that.NestedNullableCustomRecord)
            );
    }

    public override bool Equals(object? that)
    {
        if (that == null)
        {
            return false;
        }
        var that_ = that as CustomNestedClass;
        if (((object?)that_) == null)
        {
            return false;
        }
        return Equals(that_);
    }

    public static bool operator ==(CustomNestedClass? this_, CustomNestedClass? that)
    {
        if (((object?)this_) == null || ((object?)that) == null)
        {
            return object.Equals(this_, that);
        }
        return this_.Equals(that);
    }

    public static bool operator !=(CustomNestedClass? this_, CustomNestedClass? that)
    {
        if (((object?)this_) == null || ((object?)that) == null)
        {
            return !object.Equals(this_, that);
        }
        return !this_.Equals(that);
    }
#nullable restore
} // CustomNestedClass
